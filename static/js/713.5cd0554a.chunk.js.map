{"version":3,"file":"static/js/713.5cd0554a.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/FormSearchMovies/FormSearchMovies.module.css?fcd2","components/FormSearchMovies/FormSearchMovies.jsx","../node_modules/nanoid/index.browser.js","components/ListMovies/ListMovies.jsx","components/MoviesSearch/MoviesSearch.jsx","Pages/Movies/MoviesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"FormSearchMovies_form__c9s3q\"};","import React from 'react';\nimport { useState, useEffect, useRef, useMemo } from 'react';\nimport { nanoid } from 'nanoid';\nimport styles from './FormSearchMovies.module.css';\n\nconst SearchMovies = ({ onSubmit }) => {\n  const [search, setSearch] = useState('');\n\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  }, []);\n\n  const handleChange = ({ target }) => {\n    setSearch(target.value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    onSubmit(search);\n  };\n\n  const searchId = useMemo(() => nanoid(), []);\n\n  return (\n    <form onSubmit={handleSubmit} className={styles.form}>\n      <div className={styles.fieldGroup}>\n        <label htmlFor={searchId}></label>\n        <input\n          id={searchId}\n          ref={inputRef}\n          value={search}\n          onChange={handleChange}\n          required\n          type=\"text\"\n          name=\"search\"\n          placeholder=\"Enter search phrase\"\n        />\n      </div>\n      <button type=\"submit\">Search</button>\n    </form>\n  );\n};\n\nexport default SearchMovies;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst ListMovies = ({ items }) => {\n  const location = useLocation();\n  // console.log(location);\n\n  const elements = items.map(({ id, title }) => (\n    <li key={id}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        {title}\n      </Link>\n    </li>\n  ));\n\n  return <ul>{elements}</ul>;\n};\n\nexport default ListMovies;\n","import React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport FormSearchMovies from '../FormSearchMovies/FormSearchMovies';\nimport ListMovies from 'components/ListMovies/ListMovies';\nimport styles from '../Header/header.module.css';\nimport { searchMoviesApi } from '../api/api';\n\nconst MoviesSearch = () => {\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchGet = searchParams.get('search');\n\n  useEffect(() => {\n    const fetchSearch = async () => {\n      try {\n        setLoading(true);\n        const dataSearch = await searchMoviesApi(searchGet);\n        const arrMovies = dataSearch.results;\n        // console.log(arrMovies);\n        setSearchMovies(arrMovies?.length ? arrMovies : []);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (searchGet) {\n      fetchSearch();\n    }\n  }, [searchGet]);\n\n  const handleSearch = search => {\n    setSearchParams({ search: search });\n    setSearchMovies([]);\n  };\n  const isPosts = Boolean(searchMovies.length);\n  return (\n    <>\n      <FormSearchMovies onSubmit={handleSearch} />\n      {error && <p className={styles.error}>{error}</p>}\n      {loading && <p>...Loading</p>}\n      {isPosts && <ListMovies items={searchMovies} />}\n    </>\n  );\n};\n\nexport default MoviesSearch;\n","import React from 'react';\nimport MoviesSearch from 'components/MoviesSearch/MoviesSearch';\n\nconst MuviesPage = () => {\n  return (\n    <div>\n      <MoviesSearch />\n    </div>\n  );\n};\nexport default MuviesPage;\n"],"names":["_ref","onSubmit","_useState","useState","_useState2","_slicedToArray","search","setSearch","inputRef","useRef","useEffect","current","focus","searchId","useMemo","size","arguments","length","undefined","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","nanoid","_jsxs","evt","preventDefault","className","styles","children","_jsx","htmlFor","ref","value","onChange","_ref2","target","required","type","name","placeholder","items","location","useLocation","elements","map","title","Link","to","concat","state","from","searchMovies","setSearchMovies","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","searchGet","get","fetchSearch","_asyncToGenerator","_regeneratorRuntime","_callee","dataSearch","arrMovies","_context","prev","next","searchMoviesApi","sent","results","t0","message","finish","stop","apply","isPosts","Boolean","_Fragment","FormSearchMovies","ListMovies","MoviesSearch"],"sourceRoot":""}